# Generated by Django 2.2.5 on 2019-10-28 22:10

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0003_itempurchase_orderamount'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.TextField(blank=True, null=True)),
                ('customer_unique_id', models.TextField(blank=True, null=True)),
                ('customer_zip_code_prefix', models.IntegerField(blank=True, null=True)),
                ('customer_city', models.TextField(blank=True, null=True)),
                ('customer_state', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.TextField(blank=True, null=True)),
                ('customer_id', models.TextField(blank=True, null=True)),
                ('order_status', models.TextField(blank=True, null=True)),
                ('order_purchase_timestamp', models.TextField(blank=True, null=True)),
                ('order_approved_at', models.TextField(blank=True, null=True)),
                ('order_delivered_carrier_date', models.TextField(blank=True, null=True)),
                ('order_delivered_customer_date', models.TextField(blank=True, null=True)),
                ('order_estimated_delivery_date', models.TextField(blank=True, null=True)),
                ('order_item_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.TextField(blank=True, null=True)),
                ('seller_id', models.TextField(blank=True, null=True)),
                ('shipping_limit_date', models.TextField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('freight_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fact_orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeolocationCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geolocation_zip_code_prefix', models.IntegerField(blank=True, null=True)),
                ('geolocation_lat', models.FloatField(blank=True, null=True)),
                ('geolocation_lng', models.FloatField(blank=True, null=True)),
                ('geolocation_city', models.TextField(blank=True, null=True)),
                ('geolocation_state', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geolocation_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.TextField(blank=True, null=True)),
                ('order_item_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.TextField(blank=True, null=True)),
                ('seller_id', models.TextField(blank=True, null=True)),
                ('shipping_limit_date', models.TextField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('freight_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderPayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.TextField(blank=True, null=True)),
                ('payment_sequential', models.IntegerField(blank=True, null=True)),
                ('payment_type', models.TextField(blank=True, null=True)),
                ('payment_installments', models.IntegerField(blank=True, null=True)),
                ('payment_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_id', models.TextField(blank=True, null=True)),
                ('order_id', models.TextField(blank=True, null=True)),
                ('review_score', models.IntegerField(blank=True, null=True)),
                ('review_comment_title', models.TextField(blank=True, null=True)),
                ('review_comment_message', models.TextField(blank=True, null=True)),
                ('review_creation_date', models.TextField(blank=True, null=True)),
                ('review_answer_timestamp', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.TextField(blank=True, null=True)),
                ('product_category_name', models.TextField(blank=True, null=True)),
                ('product_name_lenght', models.FloatField(blank=True, null=True)),
                ('product_description_lenght', models.FloatField(blank=True, null=True)),
                ('product_photos_qty', models.FloatField(blank=True, null=True)),
                ('product_weight_g', models.FloatField(blank=True, null=True)),
                ('product_length_cm', models.FloatField(blank=True, null=True)),
                ('product_height_cm', models.FloatField(blank=True, null=True)),
                ('product_width_cm', models.FloatField(blank=True, null=True)),
                ('product_category_name_english', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
    ]
